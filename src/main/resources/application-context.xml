<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
  		http://www.springframework.org/schema/context
  		http://www.springframework.org/schema/context/spring-context-3.2.xsd
  		http://www.springframework.org/schema/tx
  		http://www.springframework.org/schema/tx/spring-tx.xsd
  		http://www.springframework.org/schema/data/jpa
  		https://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
    <context:spring-configured/>
    <context:annotation-config/>
    <context:component-scan base-package="ua.goit"/>
    <context:property-placeholder/>
    <jpa:repositories base-package="ua.goit" entity-manager-factory-ref="emf"
                      transaction-manager-ref="transactionManager"/>

    <tx:annotation-driven/>

    <bean id="bookRepository" class="ua.goit.repository.BookRepository">
        <constructor-arg ref="hibernateProvider"/>
    </bean>

    <bean id="bookService" class="ua.goit.service.BookService">
        <constructor-arg ref="bookRepository"/>
        <constructor-arg ref="bookConverter"/>
        <constructor-arg ref="authorConverter"/>
    </bean>

    <bean id="authorService" class="ua.goit.service.AuthorService">
        <constructor-arg ref="authorRepository"/>
        <constructor-arg ref="authorConverter"/>
    </bean>

    <bean id="bookValidator" class="ua.goit.service.BookValidator"/>
    <bean id="authorConverter" class="ua.goit.model.converter.AuthorConverter"/>
    <bean id="bookConverter" class="ua.goit.model.converter.BookConverter">
    <constructor-arg ref="authorConverter"/>
    </bean>
    <bean id="hibernateProvider" class="ua.goit.config.HibernateProvider"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${DRIVER_CLASS_NAME}"/>
            <property name="url" value="${DB_URL}"/>
            <property name="username" value="${DB_USERNAME}"/>
            <property name="password" value="${DB_PASSWORD}"/>
        </bean>

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
        <property name="packagesToScan" value="ua.goit"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL10Dialect</prop>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf"/>
    </bean>

</beans>